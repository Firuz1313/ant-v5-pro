import { readFileSync } from "fs";
import { fileURLToPath } from "url";
import { dirname, join } from "path";
import pkg from "pg";
const { Pool } = pkg;
import dotenv from "dotenv";
import { v4 as uuidv4 } from "uuid";

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: join(__dirname, ".env") });

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const pool = new Pool({
  connectionString:
    process.env.DATABASE_URL ||
    `postgresql://${process.env.DB_USER}:${process.env.DB_PASSWORD}@${process.env.DB_HOST}:${process.env.DB_PORT}/${process.env.DB_NAME}`,
  ssl: process.env.NODE_ENV === "production" ? { rejectUnauthorized: false } : false,
});

/**
 * –°–æ–∑–¥–∞—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è OpenBox
 */
async function createOpenBoxRemote() {
  const client = await pool.connect();
  
  try {
    console.log("üîß –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø—É–ª—å—Ç–∞ –¥–ª—è OpenBox...");

    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—É–ª—å—Ç –¥–ª—è openbox
    const existingQuery = `
      SELECT id FROM remotes 
      WHERE device_id = 'openbox' AND is_active = true
    `;
    const existingResult = await client.query(existingQuery);
    
    if (existingResult.rows.length > 0) {
      console.log("‚úÖ –ü—É–ª—å—Ç –¥–ª—è OpenBox —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:", existingResult.rows[0].id);
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è OpenBox
    const remoteId = uuidv4();
    const now = new Date().toISOString();

    const insertQuery = `
      INSERT INTO remotes (
        id,
        device_id,
        name,
        manufacturer,
        model,
        description,
        layout,
        color_scheme,
        dimensions,
        buttons,
        zones,
        is_default,
        is_active,
        usage_count,
        metadata,
        created_at,
        updated_at
      ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17)
    `;

    const values = [
      remoteId,
      'openbox',
      'OpenBox Universal Remote',
      'OpenBox',
      'OB-UR-2025',
      '–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—É–ª—å—Ç –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø—Ä–∏—Å—Ç–∞–≤–æ–∫ OpenBox. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.',
      'standard',
      'dark',
      JSON.stringify({ width: 220, height: 580 }),
      JSON.stringify([]),
      JSON.stringify([]),
      true,
      true,
      0,
      JSON.stringify({}),
      now,
      now
    ];

    await client.query(insertQuery, values);

    console.log("‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è OpenBox —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!");
    console.log("üì± Remote ID:", remoteId);
    console.log("üéÆ Device ID: openbox");
    console.log("üìã Name: OpenBox Universal Remote");

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—É–ª—å—Ç–∞ –¥–ª—è OpenBox:", error);
    throw error;
  } finally {
    client.release();
  }
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  try {
    await createOpenBoxRemote();
    console.log("\nüéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
  } catch (error) {
    console.error("\nüí• –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:", error);
    process.exit(1);
  } finally {
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main();
