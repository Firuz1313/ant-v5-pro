import humps from 'humps';

/**
 * Middleware –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è camelCase –∫–ª—é—á–µ–π –≤ snake_case
 * –†–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∏–º—ë–Ω –ø–æ–ª–µ–π –º–µ–∂–¥—É frontend (camelCase) –∏ backend (snake_case)
 */
const decamelizeBody = (req, res, next) => {
  if (req.body && typeof req.body === 'object' && !Array.isArray(req.body)) {
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–ª—é—á–∏ –∏–∑ camelCase –≤ snake_case
    req.body = humps.decamelizeKeys(req.body, {
      separator: '_',
      process: (key, convert) => {
        // –ù–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –∫–ª—é—á–∏, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤ snake_case –∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏
        if (key.includes('_') || key.toLowerCase() === key) {
          return key;
        }
        return convert(key);
      }
    });
    
    // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ dev —Ä–µ–∂–∏–º–µ
    if (process.env.NODE_ENV === 'development') {
      console.log('üîÑ [decamelizeBody] Converted request body keys to snake_case');
    }
  }
  next();
};

export default decamelizeBody;
