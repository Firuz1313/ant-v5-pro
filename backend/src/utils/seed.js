import database from "./database.js";
import dotenv from "dotenv";
import bcrypt from "bcryptjs";

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

async function seedDatabase() {
  try {
    console.log("üå± –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ANT Support");
    console.log("=============================================");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const connectionTest = await database.testConnection();
    if (!connectionTest.success) {
      console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
      process.exit(1);
    }

    console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ");

    // 1. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–∞–±–ª–∏—Ü–∞ –∏–º–µ–µ—Ç –¥—Ä—É–≥—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É)
    console.log("\nüë§ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)...");

    // 2. –°–æ–∑–¥–∞–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    console.log("üì∫ –°–æ–∑–¥–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤...");

    const devices = [
      {
        id: "device-ant-basic",
        name: "ANT Basic",
        brand: "ANT",
        model: "ANT-B100",
        description:
          "–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å —Ü–∏—Ñ—Ä–æ–≤–æ–π –¢–í-–ø—Ä–∏—Å—Ç–∞–≤–∫–∏ ANT —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HD –∫–∞—á–µ—Å—Ç–≤–∞",
        color: "from-blue-500 to-blue-600",
        order_index: 1,
      },
      {
        id: "device-ant-premium",
        name: "ANT Premium",
        brand: "ANT",
        model: "ANT-P200",
        description: "–ü—Ä–µ–º–∏—É–º –º–æ–¥–µ–ª—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 4K –∏ Smart TV —Ñ—É–Ω–∫—Ü–∏–π",
        color: "from-purple-500 to-purple-600",
        order_index: 2,
      },
      {
        id: "device-ant-pro",
        name: "ANT Professional",
        brand: "ANT",
        model: "ANT-PR300",
        description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è",
        color: "from-green-500 to-green-600",
        order_index: 3,
      },
      {
        id: "device-generic-dvb",
        name: "Generic DVB-T2",
        brand: "Generic",
        model: "DVB-T2-STD",
        description: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è DVB-T2 –ø—Ä–∏—Å—Ç–∞–≤–∫–∞",
        color: "from-gray-500 to-gray-600",
        order_index: 4,
      },
    ];

    for (const device of devices) {
      await database.query(
        `
        INSERT INTO devices (id, name, brand, model, description, color, order_index, status)
        VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
        ON CONFLICT (id) DO UPDATE SET
          name = EXCLUDED.name,
          brand = EXCLUDED.brand,
          model = EXCLUDED.model,
          description = EXCLUDED.description,
          color = EXCLUDED.color,
          order_index = EXCLUDED.order_index
      `,
        [
          device.id,
          device.name,
          device.brand,
          device.model,
          device.description,
          device.color,
          device.order_index,
          "active",
        ],
      );
    }

    // 3. –°–æ–∑–¥–∞–µ–º —Ç–∏–ø–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
    console.log("‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º...");

    const problems = [
      {
        id: "problem-no-signal",
        device_id: "device-ant-basic",
        title: "–ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞",
        description:
          '–ù–∞ —ç–∫—Ä–∞–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞" –∏–ª–∏ —á–µ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω',
        category: "critical",
        icon: "AlertTriangle",
        color: "from-red-500 to-red-600",
        priority: 5,
        estimated_time: 10,
      },
      {
        id: "problem-poor-quality",
        device_id: "device-ant-basic",
        title: "–ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è",
        description: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ—á–µ—Ç–∫–æ–µ, –µ—Å—Ç—å –ø–æ–º–µ—Ö–∏ –∏–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã",
        category: "moderate",
        icon: "Monitor",
        color: "from-orange-500 to-orange-600",
        priority: 3,
        estimated_time: 8,
      },
      {
        id: "problem-no-sound",
        device_id: "device-ant-basic",
        title: "–ù–µ—Ç –∑ÔøΩÔøΩ—É–∫–∞",
        description: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—Å—Ç—å, –Ω–æ –∑–≤—É–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç",
        category: "moderate",
        icon: "VolumeX",
        color: "from-yellow-500 to-yellow-600",
        priority: 3,
        estimated_time: 5,
      },
      {
        id: "problem-channels-missing",
        device_id: "device-ant-basic",
        title: "–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∫–∞–Ω–∞–ª—ã",
        description: "–ê–≤—Ç–æ–ø–æ–∏—Å–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç —Ç–µ–ª–µ–∫–∞–Ω–∞–ª—ã –∏–ª–∏ –Ω–∞–π–¥–µ–Ω–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ",
        category: "moderate",
        icon: "Search",
        color: "from-blue-500 to-blue-600",
        priority: 4,
        estimated_time: 15,
      },
      {
        id: "problem-remote-not-working",
        device_id: "device-ant-basic",
        title: "–ü—É–ª—å—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
        description:
          "–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –ø—É–ª—å—Ç–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
        category: "minor",
        icon: "Zap",
        color: "from-indigo-500 to-indigo-600",
        priority: 2,
        estimated_time: 7,
      },
      {
        id: "problem-freezing",
        device_id: "device-ant-premium",
        title: "–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ –∑–∞–≤–∏—Å–∞–µ—Ç",
        description: "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –∑–∞–≤–∏—Å–∞–µ—Ç –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è",
        category: "critical",
        icon: "Pause",
        color: "from-red-500 to-red-600",
        priority: 5,
        estimated_time: 12,
      },
      {
        id: "problem-wifi-connection",
        device_id: "device-ant-premium",
        title: "–ü—Ä–æ–±–ª–µ–º—ã —Å Wi-Fi",
        description:
          "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π —Å–µ—Ç–∏ –∏–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ",
        category: "moderate",
        icon: "Wifi",
        color: "from-purple-500 to-purple-600",
        priority: 3,
        estimated_time: 10,
      },
    ];

    for (const problem of problems) {
      await database.query(
        `
        INSERT INTO problems (id, device_id, title, description, category, icon, color, priority, estimated_time, status)
        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
        ON CONFLICT (id) DO UPDATE SET
          title = EXCLUDED.title,
          description = EXCLUDED.description,
          category = EXCLUDED.category,
          icon = EXCLUDED.icon,
          color = EXCLUDED.color,
          priority = EXCLUDED.priority,
          estimated_time = EXCLUDED.estimated_time
      `,
        [
          problem.id,
          problem.device_id,
          problem.title,
          problem.description,
          problem.category,
          problem.icon,
          problem.color,
          problem.priority,
          problem.estimated_time,
          "published",
        ],
      );
    }

    // 4. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–≥–∏ (—Å—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)
    console.log(
      "üîß –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–≥–∏ (–±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ)...",
    );

    // 5. –°–æ–∑–¥–∞–µ–º –ø—É–ª—å—Ç—ã –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    console.log("üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–ª—å—Ç–æ–≤ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...");

    const defaultRemotes = [
      {
        deviceId: "device-ant-basic",
        name: "ANT Basic Remote",
        manufacturer: "ANT",
        model: "RC-ANT-B100",
        description: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è ANT Basic –ø—Ä–∏—Å—Ç–∞–≤–∫–∏",
        layout: "standard",
        colorScheme: "dark",
        dimensions: { width: 200, height: 480 },
        buttons: [
          { id: "power", name: "Power", type: "power", x: 100, y: 40, width: 40, height: 40, action: "power_toggle" },
          { id: "home", name: "Home", type: "navigation", x: 100, y: 100, width: 35, height: 35, action: "goto_home" },
          { id: "back", name: "Back", type: "navigation", x: 50, y: 100, width: 35, height: 35, action: "go_back" },
          { id: "menu", name: "Menu", type: "navigation", x: 150, y: 100, width: 35, height: 35, action: "open_menu" },
          { id: "up", name: "Up", type: "direction", x: 100, y: 160, width: 30, height: 30, action: "navigate_up" },
          { id: "down", name: "Down", type: "direction", x: 100, y: 220, width: 30, height: 30, action: "navigate_down" },
          { id: "left", name: "Left", type: "direction", x: 70, y: 190, width: 30, height: 30, action: "navigate_left" },
          { id: "right", name: "Right", type: "direction", x: 130, y: 190, width: 30, height: 30, action: "navigate_right" },
          { id: "ok", name: "OK", type: "action", x: 100, y: 190, width: 30, height: 30, action: "confirm" },
          { id: "vol_up", name: "Vol+", type: "volume", x: 40, y: 160, width: 25, height: 25, action: "volume_up" },
          { id: "vol_down", name: "Vol-", type: "volume", x: 40, y: 190, width: 25, height: 25, action: "volume_down" },
          { id: "ch_up", name: "Ch+", type: "channel", x: 160, y: 160, width: 25, height: 25, action: "channel_up" },
          { id: "ch_down", name: "Ch-", type: "channel", x: 160, y: 190, width: 25, height: 25, action: "channel_down" }
        ],
        zones: [
          { id: "power_zone", name: "Power Area", x: 80, y: 20, width: 80, height: 80, description: "Power button area" },
          { id: "nav_zone", name: "Navigation Area", x: 40, y: 140, width: 120, height: 100, description: "Navigation controls" }
        ]
      },
      {
        deviceId: "device-ant-premium",
        name: "ANT Premium Smart Remote",
        manufacturer: "ANT",
        model: "RC-ANT-P200",
        description: "–£–º–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è ANT Premium —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Smart TV —Ñ—É–Ω–∫—Ü–∏–π",
        layout: "smart",
        colorScheme: "dark",
        dimensions: { width: 210, height: 520 },
        buttons: [
          { id: "power", name: "Power", type: "power", x: 105, y: 40, width: 45, height: 45, action: "power_toggle" },
          { id: "home", name: "Home", type: "navigation", x: 105, y: 100, width: 40, height: 40, action: "goto_home" },
          { id: "back", name: "Back", type: "navigation", x: 50, y: 100, width: 40, height: 40, action: "go_back" },
          { id: "menu", name: "Menu", type: "navigation", x: 160, y: 100, width: 40, height: 40, action: "open_menu" },
          { id: "up", name: "Up", type: "direction", x: 105, y: 160, width: 35, height: 35, action: "navigate_up" },
          { id: "down", name: "Down", type: "direction", x: 105, y: 230, width: 35, height: 35, action: "navigate_down" },
          { id: "left", name: "Left", type: "direction", x: 70, y: 195, width: 35, height: 35, action: "navigate_left" },
          { id: "right", name: "Right", type: "direction", x: 140, y: 195, width: 35, height: 35, action: "navigate_right" },
          { id: "ok", name: "OK", type: "action", x: 105, y: 195, width: 35, height: 35, action: "confirm" },
          { id: "vol_up", name: "Vol+", type: "volume", x: 30, y: 160, width: 30, height: 30, action: "volume_up" },
          { id: "vol_down", name: "Vol-", type: "volume", x: 30, y: 195, width: 30, height: 30, action: "volume_down" },
          { id: "ch_up", name: "Ch+", type: "channel", x: 180, y: 160, width: 30, height: 30, action: "channel_up" },
          { id: "ch_down", name: "Ch-", type: "channel", x: 180, y: 195, width: 30, height: 30, action: "channel_down" },
          { id: "netflix", name: "Netflix", type: "app", x: 50, y: 280, width: 30, height: 30, action: "launch_netflix" },
          { id: "youtube", name: "YouTube", type: "app", x: 90, y: 280, width: 30, height: 30, action: "launch_youtube" },
          { id: "prime", name: "Prime", type: "app", x: 130, y: 280, width: 30, height: 30, action: "launch_prime" }
        ],
        zones: [
          { id: "power_zone", name: "Power Area", x: 80, y: 20, width: 90, height: 90, description: "Power button area" },
          { id: "nav_zone", name: "Navigation Area", x: 30, y: 140, width: 150, height: 110, description: "Navigation controls" },
          { id: "smart_zone", name: "Smart TV Apps", x: 40, y: 260, width: 140, height: 50, description: "Smart TV app shortcuts" }
        ]
      },
      {
        deviceId: "device-ant-pro",
        name: "ANT Professional Remote",
        manufacturer: "ANT",
        model: "RC-ANT-PR300",
        description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è ANT Professional —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏",
        layout: "custom",
        colorScheme: "dark",
        dimensions: { width: 220, height: 550 },
        buttons: [
          { id: "power", name: "Power", type: "power", x: 110, y: 40, width: 50, height: 50, action: "power_toggle" },
          { id: "home", name: "Home", type: "navigation", x: 110, y: 110, width: 40, height: 40, action: "goto_home" },
          { id: "back", name: "Back", type: "navigation", x: 50, y: 110, width: 40, height: 40, action: "go_back" },
          { id: "menu", name: "Menu", type: "navigation", x: 170, y: 110, width: 40, height: 40, action: "open_menu" },
          { id: "settings", name: "Settings", type: "navigation", x: 110, y: 160, width: 40, height: 40, action: "open_settings" },
          { id: "up", name: "Up", type: "direction", x: 110, y: 220, width: 35, height: 35, action: "navigate_up" },
          { id: "down", name: "Down", type: "direction", x: 110, y: 290, width: 35, height: 35, action: "navigate_down" },
          { id: "left", name: "Left", type: "direction", x: 75, y: 255, width: 35, height: 35, action: "navigate_left" },
          { id: "right", name: "Right", type: "direction", x: 145, y: 255, width: 35, height: 35, action: "navigate_right" },
          { id: "ok", name: "OK", type: "action", x: 110, y: 255, width: 35, height: 35, action: "confirm" },
          { id: "vol_up", name: "Vol+", type: "volume", x: 30, y: 220, width: 30, height: 30, action: "volume_up" },
          { id: "vol_down", name: "Vol-", type: "volume", x: 30, y: 255, width: 30, height: 30, action: "volume_down" },
          { id: "ch_up", name: "Ch+", type: "channel", x: 190, y: 220, width: 30, height: 30, action: "channel_up" },
          { id: "ch_down", name: "Ch-", type: "channel", x: 190, y: 255, width: 30, height: 30, action: "channel_down" }
        ],
        zones: [
          { id: "power_zone", name: "Power Area", x: 85, y: 20, width: 100, height: 100, description: "Power button area" },
          { id: "nav_zone", name: "Navigation Area", x: 30, y: 200, width: 160, height: 120, description: "Navigation controls" }
        ]
      },
      {
        deviceId: "device-generic-dvb",
        name: "Generic DVB-T2 Remote",
        manufacturer: "Generic",
        model: "RC-DVB-STD",
        description: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö DVB-T2 –ø—Ä–∏—Å—Ç–∞–≤–æ–∫",
        layout: "standard",
        colorScheme: "dark",
        dimensions: { width: 190, height: 450 },
        buttons: [
          { id: "power", name: "Power", type: "power", x: 95, y: 35, width: 40, height: 40, action: "power_toggle" },
          { id: "source", name: "Source", type: "navigation", x: 50, y: 90, width: 35, height: 35, action: "change_source" },
          { id: "menu", name: "Menu", type: "navigation", x: 95, y: 90, width: 35, height: 35, action: "open_menu" },
          { id: "guide", name: "Guide", type: "navigation", x: 140, y: 90, width: 35, height: 35, action: "open_guide" },
          { id: "up", name: "Up", type: "direction", x: 95, y: 150, width: 30, height: 30, action: "navigate_up" },
          { id: "down", name: "Down", type: "direction", x: 95, y: 210, width: 30, height: 30, action: "navigate_down" },
          { id: "left", name: "Left", type: "direction", x: 65, y: 180, width: 30, height: 30, action: "navigate_left" },
          { id: "right", name: "Right", type: "direction", x: 125, y: 180, width: 30, height: 30, action: "navigate_right" },
          { id: "ok", name: "OK", type: "action", x: 95, y: 180, width: 30, height: 30, action: "confirm" },
          { id: "vol_up", name: "Vol+", type: "volume", x: 35, y: 150, width: 25, height: 25, action: "volume_up" },
          { id: "vol_down", name: "Vol-", type: "volume", x: 35, y: 180, width: 25, height: 25, action: "volume_down" },
          { id: "ch_up", name: "Ch+", type: "channel", x: 155, y: 150, width: 25, height: 25, action: "channel_up" },
          { id: "ch_down", name: "Ch-", type: "channel", x: 155, y: 180, width: 25, height: 25, action: "channel_down" }
        ],
        zones: [
          { id: "power_zone", name: "Power Area", x: 75, y: 15, width: 80, height: 80, description: "Power button area" },
          { id: "nav_zone", name: "Navigation Area", x: 35, y: 130, width: 120, height: 90, description: "Navigation controls" }
        ]
      }
    ];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—É–ª—å—Ç—ã
    const existingRemotesResult = await database.query(
      "SELECT device_id, COUNT(*) as count FROM remotes WHERE is_active = true GROUP BY device_id"
    );
    const existingRemotes = new Map(
      existingRemotesResult.rows.map(row => [row.device_id, parseInt(row.count)])
    );

    let remotesCreated = 0;
    let remotesSkipped = 0;

    for (const remoteConfig of defaultRemotes) {
      const { deviceId, ...remoteData } = remoteConfig;

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—É–ª—å—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
      const existingCount = existingRemotes.get(deviceId) || 0;
      if (existingCount > 0) {
        console.log(`‚è≠Ô∏è  –£ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ ${deviceId} —É–∂–µ –µ—Å—Ç—å ${existingCount} –ø—É–ª—å—Ç(–æ–≤), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
        remotesSkipped++;
        continue;
      }

      console.log(`üì± –°–æ–∑–¥–∞–µ–º –ø—É–ª—å—Ç –¥–ª—è ${deviceId}...`);

      await database.query(
        `INSERT INTO remotes (
          id, device_id, name, manufacturer, model, description,
          layout, color_scheme, dimensions, buttons, zones,
          is_default, usage_count, is_active, created_at, updated_at
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16)
        ON CONFLICT (id) DO NOTHING`,
        [
          `remote-${deviceId}`,
          deviceId,
          remoteData.name,
          remoteData.manufacturer,
          remoteData.model,
          remoteData.description,
          remoteData.layout,
          remoteData.colorScheme,
          JSON.stringify(remoteData.dimensions),
          JSON.stringify(remoteData.buttons),
          JSON.stringify(remoteData.zones),
          true, // is_default - –ø–µ—Ä–≤—ã–π –ø—É–ª—å—Ç –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è default
          0, // usage_count
          true, // is_active
          new Date().toISOString(),
          new Date().toISOString()
        ]
      );

      remotesCreated++;
      console.log(`‚úÖ –ü—É–ª—å—Ç "${remoteData.name}" —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
    }

    // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—É–ª—å—Ç
    console.log("üåç –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –ø—É–ª—å—Ç–∞...");

    const universalRemoteExists = await database.query(
      "SELECT COUNT(*) as count FROM remotes WHERE device_id IS NULL AND is_active = true"
    );

    if (parseInt(universalRemoteExists.rows[0].count) === 0) {
      await database.query(
        `INSERT INTO remotes (
          id, device_id, name, manufacturer, model, description,
          layout, color_scheme, dimensions, buttons, zones,
          is_default, usage_count, is_active, created_at, updated_at
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16)
        ON CONFLICT (id) DO NOTHING`,
        [
          "remote-universal",
          null, // device_id = NULL –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –ø—É–ª—å—Ç–∞
          "Universal Remote",
          "ANT",
          "RC-UNIVERSAL",
          "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤",
          "standard",
          "dark",
          JSON.stringify({ width: 200, height: 460 }),
          JSON.stringify([
            { id: "power", name: "Power", type: "power", x: 100, y: 40, width: 40, height: 40, action: "power_toggle" },
            { id: "menu", name: "Menu", type: "navigation", x: 100, y: 100, width: 35, height: 35, action: "open_menu" },
            { id: "up", name: "Up", type: "direction", x: 100, y: 160, width: 30, height: 30, action: "navigate_up" },
            { id: "down", name: "Down", type: "direction", x: 100, y: 220, width: 30, height: 30, action: "navigate_down" },
            { id: "left", name: "Left", type: "direction", x: 70, y: 190, width: 30, height: 30, action: "navigate_left" },
            { id: "right", name: "Right", type: "direction", x: 130, y: 190, width: 30, height: 30, action: "navigate_right" },
            { id: "ok", name: "OK", type: "action", x: 100, y: 190, width: 30, height: 30, action: "confirm" }
          ]),
          JSON.stringify([
            { id: "control_zone", name: "Main Controls", x: 30, y: 30, width: 140, height: 200, description: "Main control area" }
          ]),
          false, // is_default - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—É–ª—å—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è default –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
          0, // usage_count
          true, // is_active
          new Date().toISOString(),
          new Date().toISOString()
        ]
      );

      remotesCreated++;
      console.log("‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—É–ª—å—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ");
    } else {
      console.log("‚è≠Ô∏è  –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø—É–ª—å—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º");
      remotesSkipped++;
    }

    console.log(`üì± –ü—É–ª—å—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: ${remotesCreated}, –ø—Ä–æ–ø—É—â–µ–Ω–æ: ${remotesSkipped}`);

    // 6. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
    console.log("‚öôÔ∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞...");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    console.log("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö...");
    const devicesCount = await database.query(
      "SELECT COUNT(*) as count FROM devices",
    );
    const problemsCount = await database.query(
      "SELECT COUNT(*) as count FROM problems",
    );

    console.log("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!");
    console.log("===================================");
    console.log(`üì∫ –£—Å—Ç—Ä–æ–π—Å—Ç–≤: ${devicesCount.rows[0].count}`);
    console.log(`‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º: ${problemsCount.rows[0].count}`);

    console.log("\n‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error.message);
    console.error("Stack trace:", error.stack);
    process.exit(1);
  } finally {
    await database.closePool();
    console.log("üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç—ã");
  }
}

// –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
seedDatabase();
