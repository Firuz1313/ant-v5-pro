import database from "./database.js";
import dotenv from "dotenv";
import bcrypt from "bcryptjs";

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

async function seedDatabase() {
  try {
    console.log("üå± –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ANT Support");
    console.log("=============================================");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const connectionTest = await database.testConnection();
    if (!connectionTest.success) {
      console.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
      process.exit(1);
    }

    console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ");

    // 1. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–∞–±–ª–∏—Ü–∞ –∏–º–µ–µ—Ç –¥—Ä—É–≥—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É)
    console.log("\nüë§ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)...");

    // 2. –°–æ–∑–¥–∞–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    console.log("üì∫ –°–æ–∑–¥–∞–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤...");
    
    const devices = [
      {
        id: 'device-ant-basic',
        name: 'ANT Basic',
        brand: 'ANT',
        model: 'ANT-B100',
        description: '–ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å —Ü–∏—Ñ—Ä–æ–≤–æ–π –¢–í-–ø—Ä–∏—Å—Ç–∞–≤–∫–∏ ANT —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π HD –∫–∞—á–µ—Å—Ç–≤–∞',
        color: 'from-blue-500 to-blue-600',
        order_index: 1
      },
      {
        id: 'device-ant-premium',
        name: 'ANT Premium',
        brand: 'ANT',
        model: 'ANT-P200',
        description: '–ü—Ä–µ–º–∏—É–º –º–æ–¥–µ–ª—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π 4K –∏ Smart TV —Ñ—É–Ω–∫—Ü–∏–π',
        color: 'from-purple-500 to-purple-600',
        order_index: 2
      },
      {
        id: 'device-ant-pro',
        name: 'ANT Professional',
        brand: 'ANT',
        model: 'ANT-PR300',
        description: '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–æ–¥–µÔøΩÔøΩ—å –¥–ª—è –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è',
        color: 'from-green-500 to-green-600',
        order_index: 3
      },
      {
        id: 'device-generic-dvb',
        name: 'Generic DVB-T2',
        brand: 'Generic',
        model: 'DVB-T2-STD',
        description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è DVB-T2 –ø—Ä–∏—Å—Ç–∞–≤–∫–∞',
        color: 'from-gray-500 to-gray-600',
        order_index: 4
      }
    ];

    for (const device of devices) {
      await database.query(`
        INSERT INTO devices (id, name, brand, model, description, color, order_index, status)
        VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
        ON CONFLICT (id) DO UPDATE SET
          name = EXCLUDED.name,
          brand = EXCLUDED.brand,
          model = EXCLUDED.model,
          description = EXCLUDED.description,
          color = EXCLUDED.color,
          order_index = EXCLUDED.order_index
      `, [device.id, device.name, device.brand, device.model, device.description, device.color, device.order_index, 'active']);
    }

    // 3. –°–æ–∑–¥–∞–µ–º —Ç–∏–ø–∏—á–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã
    console.log("‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º...");
    
    const problems = [
      {
        id: 'problem-no-signal',
        device_id: 'device-ant-basic',
        title: '–ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞',
        description: '–ù–∞ —ç–∫—Ä–∞–Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ "–ù–µ—Ç —Å–∏–≥–Ω–∞–ª–∞" –∏–ª–∏ —á–µ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω',
        category: 'critical',
        icon: 'AlertTriangle',
        color: 'from-red-500 to-red-600',
        priority: 5,
        estimated_time: 10
      },
      {
        id: 'problem-poor-quality',
        device_id: 'device-ant-basic',
        title: '–ü–ª–æ—Ö–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
        description: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ—á–µ—Ç–∫–æ–µ, –µ—Å—Ç—å –ø–æ–º–µ—Ö–∏ –∏–ª–∏ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã',
        category: 'moderate',
        icon: 'Monitor',
        color: 'from-orange-500 to-orange-600',
        priority: 3,
        estimated_time: 8
      },
      {
        id: 'problem-no-sound',
        device_id: 'device-ant-basic',
        title: '–ù–µ—Ç –∑–≤—É–∫–∞',
        description: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ—Å—Ç—å, –Ω–æ –∑–≤—É–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        category: 'moderate',
        icon: 'VolumeX',
        color: 'from-yellow-500 to-yellow-600',
        priority: 3,
        estimated_time: 5
      },
      {
        id: 'problem-channels-missing',
        device_id: 'device-ant-basic',
        title: '–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∫–∞–Ω–∞–ª—ã',
        description: '–ê–≤—Ç–æ–ø–æ–∏—Å–∫ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç —Ç–µ–ª–µ–∫–∞–Ω–∞–ª—ã –∏–ª–∏ –Ω–∞–π–¥–µ–Ω–æ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ',
        category: 'moderate',
        icon: 'Search',
        color: 'from-blue-500 to-blue-600',
        priority: 4,
        estimated_time: 15
      },
      {
        id: 'problem-remote-not-working',
        device_id: 'device-ant-basic',
        title: '–ü—É–ª—å—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç',
        description: '–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ –Ω–µ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—ã –ø—É–ª—å—Ç–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
        category: 'minor',
        icon: 'Zap',
        color: 'from-indigo-500 to-indigo-600',
        priority: 2,
        estimated_time: 7
      },
      {
        id: 'problem-freezing',
        device_id: 'device-ant-premium',
        title: '–ü—Ä–∏—Å—Ç–∞–≤–∫–∞ –∑–∞–≤–∏—Å–∞–µ—Ç',
        description: '–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –∑–∞–≤–∏—Å–∞–µ—Ç –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è',
        category: 'critical',
        icon: 'Pause',
        color: 'from-red-500 to-red-600',
        priority: 5,
        estimated_time: 12
      },
      {
        id: 'problem-wifi-connection',
        device_id: 'device-ant-premium',
        title: '–ü—Ä–æ–±–ª–µ–º—ã —Å Wi-Fi',
        description: '–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–µ—Å–ø—Ä–æ–≤–æ–¥–Ω–æ–π —Å–µ—Ç–∏ –∏–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ',
        category: 'moderate',
        icon: 'Wifi',
        color: 'from-purple-500 to-purple-600',
        priority: 3,
        estimated_time: 10
      }
    ];

    for (const problem of problems) {
      await database.query(`
        INSERT INTO problems (id, device_id, title, description, category, icon, color, priority, estimated_time, status)
        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
        ON CONFLICT (id) DO UPDATE SET
          title = EXCLUDED.title,
          description = EXCLUDED.description,
          category = EXCLUDED.category,
          icon = EXCLUDED.icon,
          color = EXCLUDED.color,
          priority = EXCLUDED.priority,
          estimated_time = EXCLUDED.estimated_time
      `, [problem.id, problem.device_id, problem.title, problem.description, problem.category, problem.icon, problem.color, problem.priority, problem.estimated_time, 'published']);
    }

    // 4. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–≥–∏ (—Å—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)
    console.log("üîß –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–µ —à–∞–≥–∏ (–±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–∑–∂–µ)...");

    // 5. –°–æ–∑–¥–∞–µ–º –ø—É–ª—å—Ç—ã
    console.log("üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–ª—å—Ç–æ–≤ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...");
    
    const remotes = [
      {
        id: 'remote-ant-basic',
        device_id: 'device-ant-basic',
        name: 'ANT Basic Remote',
        manufacturer: 'ANT',
        model: 'REM-B100',
        description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—É–ª—å—Ç –¥–ª—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∏ ANT Basic',
        layout: 'standard',
        color_scheme: 'dark',
        dimensions: '{"width": 60, "height": 200}',
        buttons: JSON.stringify([
          {id: 'power', label: 'POWER', x: 30, y: 20, width: 40, height: 15, color: '#ff4444'},
          {id: 'menu', label: 'MENU', x: 10, y: 50, width: 30, height: 15, color: '#4444ff'},
          {id: 'up', label: '‚ñ≤', x: 30, y: 80, width: 25, height: 15, color: '#444444'},
          {id: 'down', label: '‚ñº', x: 30, y: 110, width: 25, height: 15, color: '#444444'},
          {id: 'left', label: '‚óÑ', x: 10, y: 95, width: 15, height: 15, color: '#444444'},
          {id: 'right', label: '‚ñ∫', x: 45, y: 95, width: 15, height: 15, color: '#444444'},
          {id: 'ok', label: 'OK', x: 25, y: 95, width: 20, height: 15, color: '#44ff44'}
        ]),
        is_default: true
      }
    ];

    for (const remote of remotes) {
      await database.query(`
        INSERT INTO remotes (id, device_id, name, manufacturer, model, description, layout, color_scheme, dimensions, buttons, is_default)
        VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11)
        ON CONFLICT (id) DO UPDATE SET
          name = EXCLUDED.name,
          manufacturer = EXCLUDED.manufacturer,
          model = EXCLUDED.model,
          description = EXCLUDED.description,
          layout = EXCLUDED.layout,
          color_scheme = EXCLUDED.color_scheme,
          dimensions = EXCLUDED.dimensions,
          buttons = EXCLUDED.buttons,
          is_default = EXCLUDED.is_default
      `, [remote.id, remote.device_id, remote.name, remote.manufacturer, remote.model, remote.description, remote.layout, remote.color_scheme, remote.dimensions, remote.buttons, remote.is_default]);
    }

    // 6. –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∞–π—Ç–∞
    console.log("‚öôÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–∞–π—Ç–∞...");
    
    await database.query(`
      INSERT INTO site_settings (id, site_name, site_description, default_language, theme, primary_color, accent_color)
      VALUES ($1, $2, $3, $4, $5, $6, $7)
      ON CONFLICT (id) DO UPDATE SET
        site_name = EXCLUDED.site_name,
        site_description = EXCLUDED.site_description,
        default_language = EXCLUDED.default_language,
        theme = EXCLUDED.theme,
        primary_color = EXCLUDED.primary_color,
        accent_color = EXCLUDED.accent_color
    `, ['settings', 'ANT Support', '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –¢–í-–ø—Ä–∏—Å—Ç–∞–≤–æ–∫ ANT', 'ru', 'professional', '#2563eb', '#10b981']);

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log("\nüìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...");
    const stats = await database.getDatabaseStats();
    
    console.log("üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!");
    console.log("===================================");
    console.log(`üìè –†–∞–∑–º–µ—Ä –±–∞–∑—ã: ${stats.databaseSize}`);
    
    if (stats.tables.length > 0) {
      console.log("\nüìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–∞–±–ª–∏—Ü:");
      stats.tables.forEach(table => {
        if (table.live_rows > 0) {
          console.log(`  üìÑ ${table.tablename}: ${table.live_rows} –∑–∞–ø–∏—Å–µ–π`);
        }
      });
    }

    console.log("\n‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
    
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error.message);
    console.error("Stack trace:", error.stack);
    process.exit(1);
  } finally {
    await database.closePool();
    console.log("üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç—ã");
  }
}

// –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
seedDatabase();
